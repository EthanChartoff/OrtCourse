#include <stdio.h>
#include <stdlib.h>
#define MAX 10
void main()
{
	int *ptr, *arr[MAX];
	int i, j;
	for (i=MAX-1;i>=0; i--)
	{
	    if (arr[i] = (int *) malloc(i * sizeof(int)))
	    for (j=0; j<i; j++)
	        *(*(arr+i)+j) = j*i;

	}
	ptr = *(arr+MAX-1); // &arr[9][8] fixes problem
	while (*ptr)
	    printf("%d, ", *ptr--);
}


#include <stdio.h>

int x;
char *c[] = {"DOOR", "ME", "POINTERS", "BALIL"};
char **cp[] = {c+3, c+2, c+1, c};
char ***cpp = cp;

void main(void) {
	printf("%s\n", **++cpp); // c + 2 == "POINTERS"
	printf("%s\n", ++**cpp); // (c + 2)[1]
	printf("%s\n", cpp[-1]+3); // trash, warning
	printf("%c\n", cpp[-1][-1][-1]); // P
	scanf("%d", &x);
}


#include <stdio.h>

int *a[5]; // arr of integer pointers
int (*a)[5]; // pointer to arr of integers (not integer pointers)

int main(void) {
	int mat[2][3] = {345, 12, 23, 92, 45, 76};
	int *p1[] = {*mat + 2, *(mat + 1) + 1, *(mat + 1) - 2};
	int **p2[] = {p1 + 1, p1 + 2, p1};
	int ***p3 = p2;

	printf("%d\n", ++*--*++*p3); // 346
	printf("%d\n", *(*p3[2] - 1)); // 12
	printf("%d\n", *(p3[0][-1] + 1)); // 76
	printf("%d\n", *(*(*(p3+2) + 2))); // 346
}
